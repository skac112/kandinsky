package com.github.skac112.kandinsky.nodes

import cats.Monad
import com.github.skac112.kandinsky.EnsemblePartition
import com.github.skac112.miro.{Ensemble, Graphic}

case class NaturalExploit[GI <: Graphic[DI], DI, GO <: Graphic[DO], DO, M[_]: Monad](override val internalNode: Node[GI, DI, GO, DO, M]) extends Exploit[GI, DI, GO, DO, M] {
  def splitFun(influx: Ensemble[GI, DI]): EnsemblePartition[GI, DI] = internalNode.filter(influx)
}
